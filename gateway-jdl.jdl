entity Usuario {
	nome String required,
    email String,
    isGestor Boolean,
    criadoEm ZonedDateTime,
    atualizadoEm ZonedDateTime
}

entity Funcao {
    nome String required,
    descricao String,
    criadoEm ZonedDateTime,
    atualizadoEm ZonedDateTime
}

entity Setor {
    nome String required, //Manufatura
    descricao String,
    criadoEm ZonedDateTime,
    atualizadoEm ZonedDateTime
}

entity Processo {
	numero String required,
    nome String,
    descricao String,
    setor String,
    responsavel String,
    setorResponsavel String,
    criadoEm ZonedDateTime,
    atualizadoEm ZonedDateTime
}

entity Pendencia {
    nome String //Descricao == "detalhesNaoConformidade"
    status Boolean, //Falso == NÃ£o lido
    lidaEm ZonedDateTime,
    link String, //Caminho para acessar a pendencia
    tipo EnumTipoPend,
    criadoEm ZonedDateTime,
}

enum EnumTipoPend {
	Atividade,
    Notificacao
}

relationship OneToOne {
	Usuario{funcao(nome)} to Funcao,
    Usuario{gestor(nome)} to Usuario,
    Usuario{setor(nome)} to Setor,
    Usuario{user(login)} to User,
   	Usuario{criadoPor(nome)} to Usuario,
    Usuario{atualizadoPor(nome)} to Usuario,
    Funcao{criadoPor(nome)} to Usuario,
    Funcao{atualizadoPor(nome)} to Usuario,
    Setor{criadoPor(nome)} to Usuario,
    Setor{atualizadoPor(nome)} to Usuario,
    Processo{criadoPor(nome)} to Usuario,
    Processo{atualizadoPor(nome)} to Usuario,
    Pendencia{responsavel(nome)} to Usuario,
    Pendencia{criadoPor(nome)} to Usuario,
    Pendencia{atualizadoPor(nome)} to Usuario
}

relationship ManyToMany {
	Usuario{processos(nome)} to Processo{usuario(nome)}
}

dto * with mapstruct
service * with serviceClass
paginate * with pagination 
